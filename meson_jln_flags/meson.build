___jln_default_flags = get_variable('jln_default_flags', {})
___jln_flags = {

  'jln_color': ___jln_default_flags.get('jln_color', get_option('jln_color')),

  'jln_control_flow': ___jln_default_flags.get('jln_control_flow', get_option('jln_control_flow')),

  'jln_coverage': ___jln_default_flags.get('jln_coverage', get_option('jln_coverage')),

  'jln_cpu': ___jln_default_flags.get('jln_cpu', get_option('jln_cpu')),

  'jln_debug': ___jln_default_flags.get('jln_debug', get_option('jln_debug')),

  'jln_diagnostics_format': ___jln_default_flags.get('jln_diagnostics_format', get_option('jln_diagnostics_format')),

  'jln_diagnostics_show_template_tree': ___jln_default_flags.get('jln_diagnostics_show_template_tree', get_option('jln_diagnostics_show_template_tree')),

  'jln_elide_type': ___jln_default_flags.get('jln_elide_type', get_option('jln_elide_type')),

  'jln_exceptions': ___jln_default_flags.get('jln_exceptions', get_option('jln_exceptions')),

  'jln_fix_compiler_error': ___jln_default_flags.get('jln_fix_compiler_error', get_option('jln_fix_compiler_error')),

  'jln_linker': ___jln_default_flags.get('jln_linker', get_option('jln_linker')),

  'jln_lto': ___jln_default_flags.get('jln_lto', get_option('jln_lto')),

  'jln_optimize': ___jln_default_flags.get('jln_optimize', get_option('jln_optimize')),

  'jln_pedantic': ___jln_default_flags.get('jln_pedantic', get_option('jln_pedantic')),

  'jln_pie': ___jln_default_flags.get('jln_pie', get_option('jln_pie')),

  'jln_relro': ___jln_default_flags.get('jln_relro', get_option('jln_relro')),

  'jln_reproducible_build_warnings': ___jln_default_flags.get('jln_reproducible_build_warnings', get_option('jln_reproducible_build_warnings')),

  'jln_rtti': ___jln_default_flags.get('jln_rtti', get_option('jln_rtti')),

  'jln_sanitizers': ___jln_default_flags.get('jln_sanitizers', get_option('jln_sanitizers')),

  'jln_sanitizers_extra': ___jln_default_flags.get('jln_sanitizers_extra', get_option('jln_sanitizers_extra')),

  'jln_shadow_warnings': ___jln_default_flags.get('jln_shadow_warnings', get_option('jln_shadow_warnings')),

  'jln_stack_protector': ___jln_default_flags.get('jln_stack_protector', get_option('jln_stack_protector')),

  'jln_stl_debug': ___jln_default_flags.get('jln_stl_debug', get_option('jln_stl_debug')),

  'jln_stl_fix': ___jln_default_flags.get('jln_stl_fix', get_option('jln_stl_fix')),

  'jln_suggests': ___jln_default_flags.get('jln_suggests', get_option('jln_suggests')),

  'jln_warnings': ___jln_default_flags.get('jln_warnings', get_option('jln_warnings')),

  'jln_warnings_as_error': ___jln_default_flags.get('jln_warnings_as_error', get_option('jln_warnings_as_error')),

  'jln_whole_program': ___jln_default_flags.get('jln_whole_program', get_option('jln_whole_program')),

}

jln_custom_cpp_flags = []
jln_custom_link_flags = []

___jln_cpp_compiler = meson.get_compiler('cpp')
___jln_compiler_id = ___jln_cpp_compiler.get_id()
___jln_compiler_version = ___jln_cpp_compiler.version()

___jln_custom_flags = get_variable('jln_custom_flags', []) + [___jln_flags]

foreach ___jln_flags : ___jln_custom_flags
jln_cpp_flags = []
jln_link_flags = []


  if (  ( (___jln_compiler_id == 'gcc') or (___jln_compiler_id == 'clang') ) )
    if (  not ( (___jln_flags.get('jln_fix_compiler_error', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_fix_compiler_error', 'default') == 'on') )
        if (  (___jln_compiler_id == 'gcc') )
          if (  not ( ___jln_compiler_version.version_compare('<4.7') ) )
            jln_cpp_flags += ['-Werror=narrowing', ]
            if (  not ( ___jln_compiler_version.version_compare('<7.1') ) )
              jln_cpp_flags += ['-Werror=literal-suffix', ]
            endif
          endif
        endif
      elif (  (___jln_compiler_id == 'clang') )
        jln_cpp_flags += ['-Wno-error=c++11-narrowing', '-Wno-reserved-user-defined-literal', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_coverage', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_coverage', 'default') == 'on') )
        jln_cpp_flags += ['--coverage', ]
        jln_link_flags += ['--coverage', ]
        if (  (___jln_compiler_id == 'clang') )
          jln_link_flags += ['-lprofile_rt', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_debug', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_debug', 'default') == 'off') )
        jln_cpp_flags += ['-g0', ]
      elif (  (___jln_flags.get('jln_debug', 'default') == 'gdb') )
        jln_cpp_flags += ['-ggdb', ]
      elif (  (___jln_compiler_id == 'clang') )
        if (  (___jln_flags.get('jln_debug', 'default') == 'line_tables_only') )
          jln_cpp_flags += ['-gline-tables-only', ]
        endif
        if (  (___jln_flags.get('jln_debug', 'default') == 'lldb') )
          jln_cpp_flags += ['-glldb', ]
        elif (  (___jln_flags.get('jln_debug', 'default') == 'sce') )
          jln_cpp_flags += ['-gsce', ]
        else
          jln_cpp_flags += ['-g', ]
        endif
      else
        jln_cpp_flags += ['-g', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_linker', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_linker', 'default') == 'bfd') )
        jln_link_flags += ['-fuse-ld=bfd', ]
      elif (  ( (___jln_flags.get('jln_linker', 'default') == 'gold') or (___jln_compiler_id == 'gcc') ) )
        jln_link_flags += ['-fuse-ld=gold', ]
      else
        jln_link_flags += ['-fuse-ld=lld', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_lto', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_lto', 'default') == 'off') )
        jln_cpp_flags += ['-fno-lto', ]
        jln_link_flags += ['-fno-lto', ]
      else
        jln_cpp_flags += ['-flto', ]
        jln_link_flags += ['-flto', ]
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<5.0') ) ) )
          if (  not ( (___jln_flags.get('jln_warnings', 'default') == 'default')) )
            if (  not (___jln_flags.get('jln_warnings', 'default') == 'off') )
              jln_cpp_flags += ['-flto-odr-type-merging', ]
              jln_link_flags += ['-flto-odr-type-merging', ]
            endif
          endif
          if (  (___jln_flags.get('jln_lto', 'default') == 'fat') )
            jln_cpp_flags += ['-ffat-lto-objects', ]
          endif
          if (  (___jln_flags.get('jln_lto', 'default') == 'linker_plugin') )
            jln_link_flags += ['-fuse-linker-plugin', ]
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_optimize', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_optimize', 'default') == 'off') )
        jln_cpp_flags += ['-O0', ]
        jln_link_flags += ['-O0', ]
      elif (  (___jln_flags.get('jln_optimize', 'default') == 'debugoptimized') )
        jln_cpp_flags += ['-Og', ]
        jln_link_flags += ['-Og', ]
      else
        jln_cpp_flags += ['-DNDEBUG', ]
        if (  (___jln_flags.get('jln_optimize', 'default') == 'minsize') )
          jln_cpp_flags += ['-Os', ]
          jln_link_flags += ['-Os', ]
        elif (  (___jln_flags.get('jln_optimize', 'default') == 'fast') )
          jln_cpp_flags += ['-Ofast', ]
          jln_link_flags += ['-Ofast', ]
        elif (  (___jln_flags.get('jln_optimize', 'default') == 'release') )
          jln_cpp_flags += ['-O3', ]
          jln_link_flags += ['-O3', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_cpu', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_cpu', 'default') == 'generic') )
        jln_cpp_flags += ['-mtune=generic', ]
        jln_link_flags += ['-mtune=generic', ]
      else
        jln_cpp_flags += ['-march=native', '-mtune=native', ]
        jln_link_flags += ['-march=native', '-mtune=native', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_whole_program', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_whole_program', 'default') == 'off') )
        jln_cpp_flags += ['-fno-whole-program', ]
        if (  ( (___jln_compiler_id == 'clang') and not ( ___jln_compiler_version.version_compare('<3.9') ) ) )
          jln_cpp_flags += ['-fno-whole-program-vtables', ]
          jln_link_flags += ['-fno-whole-program-vtables', ]
        endif
      else
        jln_link_flags += ['-s', ]
        if (  (___jln_flags.get('jln_whole_program', 'default') == 'strip_all') )
          jln_link_flags += ['-Wl,--gc-sections', '-Wl,--strip-all', ]
        endif
        if (  (___jln_compiler_id == 'gcc') )
          jln_cpp_flags += ['-fwhole-program', ]
          jln_link_flags += ['-fwhole-program', ]
        else
          if (  ( (___jln_compiler_id == 'clang') and not ( ___jln_compiler_version.version_compare('<3.9') ) ) )
            if (  not ( (___jln_flags.get('jln_lto', 'default') == 'default')) )
              if (  not (___jln_flags.get('jln_lto', 'default') == 'off') )
                jln_cpp_flags += ['-fwhole-program-vtables', ]
                jln_link_flags += ['-fwhole-program-vtables', ]
              endif
            endif
            if (  not ( ___jln_compiler_version.version_compare('<7.0') ) )
              jln_cpp_flags += ['-fforce-emit-vtables', ]
              jln_link_flags += ['-fforce-emit-vtables', ]
            endif
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_pedantic', 'default') == 'default')) )
      if (  not (___jln_flags.get('jln_pedantic', 'default') == 'off') )
        jln_cpp_flags += ['-pedantic', ]
        if (  (___jln_flags.get('jln_pedantic', 'default') == 'as_error') )
          jln_cpp_flags += ['-pedantic-errors', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_stack_protector', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_stack_protector', 'default') == 'off') )
        jln_cpp_flags += ['-Wno-stack-protector', '-U_FORTIFY_SOURCE', ]
        jln_link_flags += ['-Wno-stack-protector', ]
      else
        jln_cpp_flags += ['-D_FORTIFY_SOURCE=2', '-Wstack-protector', ]
        if (  (___jln_flags.get('jln_stack_protector', 'default') == 'strong') )
          if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<4.9') ) ) )
            jln_cpp_flags += ['-fstack-protector-strong', ]
            jln_link_flags += ['-fstack-protector-strong', ]
          elif (  (___jln_compiler_id == 'clang') )
            jln_cpp_flags += ['-fstack-protector-strong', '-fsanitize=safe-stack', ]
            jln_link_flags += ['-fstack-protector-strong', '-fsanitize=safe-stack', ]
          endif
        elif (  (___jln_flags.get('jln_stack_protector', 'default') == 'all') )
          jln_cpp_flags += ['-fstack-protector-all', ]
          jln_link_flags += ['-fstack-protector-all', ]
          if (  (___jln_compiler_id == 'clang') )
            jln_cpp_flags += ['-fsanitize=safe-stack', ]
            jln_link_flags += ['-fsanitize=safe-stack', ]
          endif
        else
          jln_cpp_flags += ['-fstack-protector', ]
          jln_link_flags += ['-fstack-protector', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_relro', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_relro', 'default') == 'off') )
        jln_link_flags += ['-Wl,-z,norelro', ]
      elif (  (___jln_flags.get('jln_relro', 'default') == 'on') )
        jln_link_flags += ['-Wl,-z,relro', ]
      elif (  (___jln_flags.get('jln_relro', 'default') == 'full') )
        jln_link_flags += ['-Wl,-z,relro,-z,now', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_pie', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_pie', 'default') == 'off') )
        jln_link_flags += ['-no-pic', ]
      elif (  (___jln_flags.get('jln_pie', 'default') == 'on') )
        jln_link_flags += ['-pie', ]
      elif (  (___jln_flags.get('jln_pie', 'default') == 'pic') )
        jln_cpp_flags += ['-fPIC', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_suggests', 'default') == 'default')) )
      if (  not (___jln_flags.get('jln_suggests', 'default') == 'off') )
        if (  (___jln_compiler_id == 'gcc') )
          jln_cpp_flags += ['-Wsuggest-attribute=pure', '-Wsuggest-attribute=const', ]
          if (  not ( ___jln_compiler_version.version_compare('<5.0') ) )
            jln_cpp_flags += ['-Wsuggest-final-types', '-Wsuggest-final-methods', ]
            if (  not ( ___jln_compiler_version.version_compare('<5.1') ) )
              jln_cpp_flags += ['-Wnoexcept', ]
            endif
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_stl_debug', 'default') == 'default')) )
      if (  not (___jln_flags.get('jln_stl_debug', 'default') == 'off') )
        if (  (___jln_flags.get('jln_stl_debug', 'default') == 'assert_as_exception') )
          jln_cpp_flags += ['-D_LIBCPP_DEBUG_USE_EXCEPTIONS', ]
        endif
        if (  ( (___jln_flags.get('jln_stl_debug', 'default') == 'allow_broken_abi') or (___jln_flags.get('jln_stl_debug', 'default') == 'allow_broken_abi_and_bugged') ) )
          if (  ( ( (___jln_compiler_id == 'clang') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) or (___jln_flags.get('jln_stl_debug', 'default') == 'allow_broken_abi_and_bugged') ) )
            jln_cpp_flags += ['-D_LIBCPP_DEBUG=1', ]
          endif
          jln_cpp_flags += ['-D_GLIBCXX_DEBUG', ]
        else
          jln_cpp_flags += ['-D_GLIBCXX_ASSERTIONS', ]
        endif
        if (  not ( (___jln_flags.get('jln_pedantic', 'default') == 'default')) )
          if (  not (___jln_flags.get('jln_pedantic', 'default') == 'off') )
            jln_cpp_flags += ['-D_GLIBCXX_DEBUG_PEDANTIC', ]
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_shadow_warnings', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'off') )
        jln_cpp_flags += ['-Wno-shadow', ]
      elif (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'on') )
        jln_cpp_flags += ['-Wshadow', ]
      elif (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'all') )
        if (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-Wshadow-all', ]
        else
          jln_cpp_flags += ['-Wshadow', ]
        endif
      elif (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<7.1') ) ) )
        if (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'local') )
          jln_cpp_flags += ['-Wshadow=local', ]
        elif (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'compatible_local') )
          jln_cpp_flags += ['-Wshadow=compatible-local', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_warnings', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_warnings', 'default') == 'off') )
        jln_cpp_flags += ['-w', ]
      else
        if (  (___jln_compiler_id == 'gcc') )
          jln_cpp_flags += ['-Wall', '-Wextra', '-Wcast-align', '-Wcast-qual', '-Wdisabled-optimization', '-Wfloat-equal', '-Wformat-security', '-Wformat=2', '-Wmissing-declarations', '-Wmissing-include-dirs', '-Wnon-virtual-dtor', '-Wold-style-cast', '-Woverloaded-virtual', '-Wpacked', '-Wredundant-decls', '-Wundef', '-Wunused-macros', ]
          if (  not ( ___jln_compiler_version.version_compare('<4.7') ) )
            jln_cpp_flags += ['-Wsuggest-attribute=noreturn', '-Wzero-as-null-pointer-constant', '-Wlogical-op', '-Wvector-operation-performance', '-Wdouble-promotion', '-Wtrampolines', ]
            if (  not ( ___jln_compiler_version.version_compare('<4.8') ) )
              jln_cpp_flags += ['-Wuseless-cast', ]
              if (  not ( ___jln_compiler_version.version_compare('<4.9') ) )
                jln_cpp_flags += ['-Wconditionally-supported', '-Wfloat-conversion', ]
                if (  not ( ___jln_compiler_version.version_compare('<5.1') ) )
                  jln_cpp_flags += ['-Wformat-signedness', '-Warray-bounds=2', '-Wconditionally-supported', '-Wstrict-null-sentinel', '-Wsuggest-override', ]
                  if (  not ( ___jln_compiler_version.version_compare('<6.1') ) )
                    jln_cpp_flags += ['-Wduplicated-cond', '-Wnull-dereference', ]
                    if (  not ( ___jln_compiler_version.version_compare('<7.0') ) )
                      jln_cpp_flags += ['-Waligned-new', ]
                      if (  not ( ___jln_compiler_version.version_compare('<7.1') ) )
                        jln_cpp_flags += ['-Walloc-zero', '-Walloca', '-Wformat-overflow=2', '-Wduplicated-branches', ]
                        if (  not ( ___jln_compiler_version.version_compare('<8.0') ) )
                          jln_cpp_flags += ['-Wclass-memaccess', ]
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        elif (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-Weverything', '-Wno-c++98-compat', '-Wno-c++98-compat-pedantic', '-Wno-mismatched-tags', '-Wno-padded', '-Wno-global-constructors', '-Wno-weak-vtables', '-Wno-exit-time-destructors', '-Wno-covered-switch-default', '-Wno-switch-default', '-Wno-switch-enum', ]
          if (  not ( ___jln_compiler_version.version_compare('<3.9') ) )
            jln_cpp_flags += ['-Wno-undefined-var-template', ]
          endif
          if (  not ( ___jln_compiler_version.version_compare('<5.0') ) )
            jln_cpp_flags += ['-Wno-inconsistent-missing-destructor-override', ]
          endif
        endif
        if (  ( (___jln_flags.get('jln_warnings', 'default') == 'strict') or (___jln_flags.get('jln_warnings', 'default') == 'very_strict') ) )
          jln_cpp_flags += ['-Wconversion', ]
          if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) )
            jln_cpp_flags += ['-Wcast-align=strict', ]
          endif
        elif (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-Wno-conversion', '-Wno-sign-conversion', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_sanitizers', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_sanitizers', 'default') == 'off') )
        jln_cpp_flags += ['-fno-sanitize=all', ]
        jln_link_flags += ['-fno-sanitize=all', ]
      else
        if (  (___jln_compiler_id == 'clang') )
          if (  not ( ___jln_compiler_version.version_compare('<3.1') ) )
            jln_cpp_flags += ['-fsanitize=undefined', '-fsanitize=address', '-fsanitize-address-use-after-scope', '-fno-omit-frame-pointer', '-fno-optimize-sibling-calls', ]
            jln_link_flags += ['-fsanitize=undefined', '-fsanitize=address', ]
            if (  not ( ___jln_compiler_version.version_compare('<3.4') ) )
              jln_cpp_flags += ['-fsanitize=leak', ]
              jln_link_flags += ['-fsanitize=leak', ]
              if (  not ( ___jln_compiler_version.version_compare('<6.0') ) )
                jln_cpp_flags += ['-fsanitize=bounds', ]
                jln_link_flags += ['-fsanitize=bounds', ]
              endif
            endif
          endif
        else
          if (  not ( ___jln_compiler_version.version_compare('<4.8') ) )
            jln_cpp_flags += ['-fsanitize=address', '-fno-omit-frame-pointer', '-fno-optimize-sibling-calls', ]
            jln_link_flags += ['-fsanitize=address', ]
            if (  not ( ___jln_compiler_version.version_compare('<4.9') ) )
              jln_cpp_flags += ['-fsanitize=undefined', '-fsanitize=leak', ]
              jln_link_flags += ['-fsanitize=undefined', '-fsanitize=leak', ]
              if (  not ( ___jln_compiler_version.version_compare('<6.0') ) )
                jln_cpp_flags += ['-fsanitize=bounds', '-fsanitize=bounds-strict', ]
              endif
            endif
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_control_flow', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_control_flow', 'default') == 'off') )
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) )
          jln_cpp_flags += ['-fcf-protection=none', ]
        endif
        if (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-fno-sanitize=cfi', ]
          jln_link_flags += ['-fno-sanitize=cfi', ]
        endif
      else
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) )
          jln_cpp_flags += ['-fcf-protection=full', ]
        endif
        if (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-fsanitize=cfi', '-fvisibility=hidden', '-flto', ]
          jln_link_flags += ['-fsanitize=cfi', '-flto', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_sanitizers_extra', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_sanitizers_extra', 'default') == 'thread') )
        jln_cpp_flags += ['-fsanitize=thread', ]
      elif (  (___jln_flags.get('jln_sanitizers_extra', 'default') == 'pointer') )
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) )
          jln_cpp_flags += ['-fsanitize=pointer-compare', '-fsanitize=pointer-subtract', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_reproducible_build_warnings', 'default') == 'default')) )
      if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<4.9') ) ) )
        if (  (___jln_flags.get('jln_reproducible_build_warnings', 'default') == 'on') )
          jln_cpp_flags += ['-Wdate-time', ]
        else
          jln_cpp_flags += ['-Wno-date-time', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_color', 'default') == 'default')) )
      if (  ( ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<4.9') ) ) or (___jln_compiler_id == 'clang') ) )
        if (  (___jln_flags.get('jln_color', 'default') == 'auto') )
          jln_cpp_flags += ['-fdiagnostics-color=auto', ]
        elif (  (___jln_flags.get('jln_color', 'default') == 'never') )
          jln_cpp_flags += ['-fdiagnostics-color=never', ]
        elif (  (___jln_flags.get('jln_color', 'default') == 'always') )
          jln_cpp_flags += ['-fdiagnostics-color=always', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_elide_type', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_elide_type', 'default') == 'on') )
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) )
          jln_cpp_flags += ['-felide-type', ]
        endif
      elif (  ( ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) or ( (___jln_compiler_id == 'clang') and not ( ___jln_compiler_version.version_compare('<3.4') ) ) ) )
        jln_cpp_flags += ['-fno-elide-type', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_exceptions', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_exceptions', 'default') == 'on') )
        jln_cpp_flags += ['-fexceptions', ]
      else
        jln_cpp_flags += ['-fno-exceptions', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_rtti', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_rtti', 'default') == 'on') )
        jln_cpp_flags += ['-frtti', ]
      else
        jln_cpp_flags += ['-fno-rtti', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_diagnostics_show_template_tree', 'default') == 'default')) )
      if (  ( ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<8.0') ) ) or (___jln_compiler_id == 'clang') ) )
        if (  (___jln_flags.get('jln_diagnostics_show_template_tree', 'default') == 'on') )
          jln_cpp_flags += ['-fdiagnostics-show-template-tree', ]
        else
          jln_cpp_flags += ['-fno-diagnostics-show-template-tree', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_diagnostics_format', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_diagnostics_format', 'default') == 'fixits') )
        if (  ( ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<7.0') ) ) or ( (___jln_compiler_id == 'clang') and not ( ___jln_compiler_version.version_compare('<5.0') ) ) ) )
          jln_cpp_flags += ['-fdiagnostics-parseable-fixits', ]
        endif
      elif (  (___jln_flags.get('jln_diagnostics_format', 'default') == 'patch') )
        if (  ( (___jln_compiler_id == 'gcc') and not ( ___jln_compiler_version.version_compare('<7.0') ) ) )
          jln_cpp_flags += ['-fdiagnostics-generate-patch', ]
        endif
      elif (  (___jln_flags.get('jln_diagnostics_format', 'default') == 'print_source_range_info') )
        if (  (___jln_compiler_id == 'clang') )
          jln_cpp_flags += ['-fdiagnostics-print-source-range-info', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_warnings_as_error', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_warnings_as_error', 'default') == 'on') )
        jln_cpp_flags += ['-Werror', ]
      else
        jln_cpp_flags += ['-Wno-error', ]
      endif
    endif
  elif (  (___jln_compiler_id == 'msvc') )
    if (  not ( (___jln_flags.get('jln_stl_fix', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_stl_fix', 'default') == 'on') )
        jln_cpp_flags += ['/DNOMINMAX', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_debug', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_debug', 'default') == 'off') )
        jln_cpp_flags += ['/DEBUG:NONE', ]
      else
        jln_cpp_flags += ['/RTC1', '/Od', ]
        if (  (___jln_flags.get('jln_debug', 'default') == 'on') )
          jln_cpp_flags += ['/DEBUG', ]
        elif (  (___jln_flags.get('jln_debug', 'default') == 'line_tables_only') )
          jln_cpp_flags += ['/DEBUG:FASTLINK', ]
        endif
        if (  not ( (___jln_flags.get('jln_optimize', 'default') == 'default')) )
          if (  (___jln_flags.get('jln_optimize', 'default') == 'debugoptimized') )
            jln_cpp_flags += ['/Zi', ]
          else
            jln_cpp_flags += ['/ZI', ]
          endif
        else
          jln_cpp_flags += ['/ZI', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_exceptions', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_exceptions', 'default') == 'on') )
        jln_cpp_flags += ['/EHc', ]
      else
        jln_cpp_flags += ['/EHc-', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_optimize', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_optimize', 'default') == 'off') )
        jln_cpp_flags += ['/Ob0 /Od /Oi- /Oy-', ]
      elif (  (___jln_flags.get('jln_optimize', 'default') == 'debugoptimized') )
        jln_cpp_flags += ['/Ob1', ]
      else
        jln_cpp_flags += ['/DNDEBUG', ]
        if (  (___jln_flags.get('jln_optimize', 'default') == 'release') )
          jln_cpp_flags += ['/O2', '/OPT:REF', ]
          jln_link_flags += ['/OPT:REF', ]
        elif (  (___jln_flags.get('jln_optimize', 'default') == 'minsize') )
          jln_cpp_flags += ['/O1', '/OPT:REF', '/Gw', ]
          jln_link_flags += ['/OPT:REF', ]
        elif (  (___jln_flags.get('jln_optimize', 'default') == 'fast') )
          jln_cpp_flags += ['/O2', '/OPT:REF', '/fp:fast', ]
          jln_link_flags += ['/OPT:REF', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_lto', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_lto', 'default') == 'off') )
        jln_cpp_flags += ['/LTCG:OFF', ]
      else
        jln_cpp_flags += ['/GL', ]
        jln_link_flags += ['/LTCG', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_whole_program', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_whole_program', 'default') == 'off') )
        jln_cpp_flags += ['/GL-', ]
      else
        jln_cpp_flags += ['/GL', '/Gw', ]
        jln_link_flags += ['/LTCG', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_pedantic', 'default') == 'default')) )
      if (  not (___jln_flags.get('jln_pedantic', 'default') == 'off') )
        jln_cpp_flags += ['/permissive-', '/Zc:__cplusplus', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_rtti', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_rtti', 'default') == 'on') )
        jln_cpp_flags += ['/GR', ]
      else
        jln_cpp_flags += ['/GR-', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_stl_debug', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_stl_debug', 'default') == 'off') )
        jln_cpp_flags += ['/D_HAS_ITERATOR_DEBUGGING=0', ]
      else
        jln_cpp_flags += ['/D_DEBUG', '/D_HAS_ITERATOR_DEBUGGING=1', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_control_flow', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_control_flow', 'default') == 'off') )
        jln_cpp_flags += ['/guard:cf-', ]
      else
        jln_cpp_flags += ['/guard:cf', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_sanitizers', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_sanitizers', 'default') == 'on') )
        jln_cpp_flags += ['/sdl', ]
      else
        if (  not ( (___jln_flags.get('jln_stack_protector', 'default') == 'default')) )
          if (  not (___jln_flags.get('jln_stack_protector', 'default') == 'off') )
            jln_cpp_flags += ['/sdl-', ]
          endif
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_stack_protector', 'default') == 'default')) )
      if (  not (___jln_flags.get('jln_stack_protector', 'default') == 'off') )
        jln_cpp_flags += ['/GS', '/sdl', ]
        if (  (___jln_flags.get('jln_stack_protector', 'default') == 'strong') )
          jln_cpp_flags += ['/RTC1', ]
        elif (  (___jln_flags.get('jln_stack_protector', 'default') == 'all') )
          jln_cpp_flags += ['/RTC1', '/RTCc', ]
        endif
      endif
    endif
    if (  not ( (___jln_flags.get('jln_shadow_warnings', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'off') )
        jln_cpp_flags += ['/wd4456', '/wd4459', ]
      elif (  ( (___jln_flags.get('jln_shadow_warnings', 'default') == 'on') or (___jln_flags.get('jln_shadow_warnings', 'default') == 'all') ) )
        jln_cpp_flags += ['/w4456', '/w4459', ]
      elif (  (___jln_flags.get('jln_shadow_warnings', 'default') == 'local') )
        jln_cpp_flags += ['/w4456', '/wd4459', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_warnings', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_warnings', 'default') == 'on') )
        jln_cpp_flags += ['/W4', '/wd4244', '/wd4245', ]
      elif (  (___jln_flags.get('jln_warnings', 'default') == 'strict') )
        jln_cpp_flags += ['/Wall', '/wd4820', '/wd4514', '/wd4710', ]
      elif (  (___jln_flags.get('jln_warnings', 'default') == 'very_strict') )
        jln_cpp_flags += ['/Wall', ]
      elif (  (___jln_flags.get('jln_warnings', 'default') == 'off') )
        jln_cpp_flags += ['/W0', ]
      endif
    endif
    if (  not ( (___jln_flags.get('jln_warnings_as_error', 'default') == 'default')) )
      if (  (___jln_flags.get('jln_warnings_as_error', 'default') == 'on') )
        jln_cpp_flags += ['/WX', ]
        jln_link_flags += ['/WX', ]
      else
        jln_cpp_flags += ['/WX-', ]
      endif
    endif
  endif

  jln_custom_cpp_flags += [jln_cpp_flags]
  jln_custom_link_flags += [jln_link_flags]
endforeach
